//Efl.Ui.Popup Themes
/**
Group: efl/popup (@since 1.23)
	 Part Swallow: efl.background (required)
	 Part Swallow: efl.content (required)
Group: efl/popup/backwall (@since 1.23)
	 Part Swallow: efl.content (required)
	 Signal: efl,content,set
	 Signal: efl,content,unset

Group: efl/alert_popup/backwall (@since 1.23)
  Part Swallow: efl.content (required)
  Signal: efl,content,set
  Signal: efl,content,unset
Group: efl/alert_popup/button_layout2 (@since 1.23)
  Part Swallow: efl.button1 (required)
  Part Swallow: efl.button2 (required)
Group: efl/alert_popup/right_button (@since 1.23)
  Part Text: efl.text (required)
  Part Swallow: efl.background (required)
  Part Swallow: efl.content (required)
  Signal: efl,content,set
  Signal: efl,content,unset
  Signal: efl,state,animation,activated
  Signal: efl,state,background,set
  Signal: efl,state,background,unset
  Signal: efl,state,disabled
  Signal: efl,state,enabled
  Signal: efl,text,set
  Signal: efl,text,unset
Group: efl/alert_popup (@since 1.23)
  Part Swallow: efl.background (required)
  Part Swallow: efl.buttons (required)
  Part Swallow: efl.content (required)
  Part Textblock: efl.text.title (required)
  Signal: efl,buttons,visible,on
  Signal: efl,title,visible,off
  Signal: efl,title,visible,on
Group: efl/alert_popup/button_layout3 (@since 1.23)
  Part Swallow: efl.button1 (required)
  Part Swallow: efl.button2 (required)
  Part Swallow: efl.button3 (required)
Group: efl/alert_popup/button (@since 1.23)
  Part Text: efl.text (required)
  Part Swallow: efl.background (required)
  Part Swallow: efl.content (required)
  Signal: efl,content,set
  Signal: efl,content,unset
  Signal: efl,state,animation,activated
  Signal: efl,state,background,set
  Signal: efl,state,background,unset
  Signal: efl,state,disabled
  Signal: efl,state,enabled
  Signal: efl,text,set
  Signal: efl,text,unset
Group: efl/alert_popup/button_layout1 (@since 1.23)
  Part Swallow: efl.button1 (required)
Group: efl/alert_popup/left_button (@since 1.23)
  Part Text: efl.text (required)
  Part Swallow: efl.background (required)
  Part Swallow: efl.content (required)
  Signal: efl,content,set
  Signal: efl,content,unset
  Signal: efl,state,animation,activated
  Signal: efl,state,background,set
  Signal: efl,state,background,unset
  Signal: efl,state,disabled
  Signal: efl,state,enabled
  Signal: efl,text,set
  Signal: efl,text,unset
*/
group { "efl/popup";
   data.item: "version" "123";
   images.image: "win_shad_flat.png" COMP;
   parts {
      part { name: "shadow"; type: RECT;
         description { state: "default" 0.0;
            rel.to: "_sh1";
            color_class: "/shadow/normal/frame";
         }
      }
      WIN_SHAD("base", "shadow", "win_shad_flat.png", 10, 10, 7, 14, 0.25);
      rect { "base";
         scale;
         desc { "default";
            min: 100 100;
            color_class: "/dim/normal/popup";
            rel1.offset: 16 16;
            rel2.offset: -17 -17;
            offscale;
         }
      }
      swallow { "efl.background"; required;
         desc { "default";
            rel.to: "base";
         }
      }
      swallow { "efl.content"; required;
         scale;
         desc { "default";
            rel.to: "base";
            rel1.offset: 4 4;
            rel2.offset: -5 -5;
            offscale;
         }
      }
   }
}

group { "efl/alert_popup";
   data.item: "version" "123";
   images.image: "win_shad_flat.png" COMP;
   parts {
      part { name: "shadow"; type: RECT;
         description { state: "default" 0.0;
            rel.to: "_sh1";
            color_class: "/shadow/normal/frame";
         }
      }
      WIN_SHAD("base", "shadow", "win_shad_flat.png", 10, 10, 7, 14, 0.25);
      rect { "base";
         scale;
         desc { "default";
            min: 100 100;
            color_class: "/dim/normal/popup";
            rel1.offset: 16 16;
            rel2.offset: -17 -17;
            offscale;
         }
      }
      swallow { "efl.background"; required;
         desc { "default";
            rel.to: "base";
         }
      }
      swallow { "efl.content"; required;
         scale;
         desc { "default";
            rel1.to_x: "base";
            rel1.to_y: "title_bg";
            rel2.to_x: "base";
            rel2.to_y: "efl.buttons";
            rel1.relative: 0.0 1.0;
            rel2.relative: 1.0 0.0;
            rel1.offset: 4 4;
            rel2.offset: -5 -5;
            offscale;
         }
      }
      rect { "title_bg";
         scale;
         desc { "default";
            fixed: 0 1;
            min: 0 0;
            rel.to: "base";
            rel2.relative: 1.0 0.0;
            align: 0.0 0.0;
            color_class: "/bg/normal/popup";
         }
         desc { "title_visible";
            inherit: "default";
            min: 0 24;
         }
      }
      textblock { "efl.text.title"; required;
         scale;
         desc { "default";
            fixed: 1 1;
            text {
              style: "popup_title_style_ellipsis";
            }
            rel.to: "title_bg";
            rel1.offset: 4 4;
            rel2.offset: -5 -5;
            offscale;
            hid;
         }
         desc { "title_visible";
            inherit: "default";
            vis;
         }
      }
      swallow { "efl.buttons"; required;
         scale;
         desc { "default";
            fixed: 0 1;
            rel.to: "base";
            rel1.relative: 0.0 1.0;
            rel1.offset:  4 0;
            rel2.offset: -5 0;
            align: 0.5 1.0;
            min: 0 0;
            offscale;
         }
         desc { "button_visible";
            inherit: "default";
            min: 80 24;
            rel1.offset:  4 -5;
            rel2.offset: -5 -5;
         }
      }
   }
   programs {
      program { signal: "efl,title,visible,on"; source: "efl";
         action: STATE_SET "title_visible" 0.0;
         target: "title_bg";
         target: "efl.text.title";
      }
      program { signal: "efl,title,visible,off"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "title_bg";
         target: "efl.text.title";
      }
      program { signal: "efl,buttons,visible,on"; source: "efl";
         action: STATE_SET "button_visible" 0.0;
         target: "efl.buttons";
      }
   }
}

group { "efl/popup/backwall";
   data.item: "version" "123";
   alias: "efl/alert_popup/backwall";
   parts {
      rect { "base";
         desc { "default";
            color_class: "/dim/normal/hover";
         }
         desc { "content_visible";
            inherit: "default";
            hid;
         }
      }
      swallow { "efl.content"; required;
         scale;
         desc { "default";
            rel.to: "base";
            rel1.offset: 4 4;
            rel2.offset: -5 -5;
            hid;
            offscale;
         }
         desc { "content_visible";
            inherit: "default";
            vis;
         }
      }
      rect { "block";
         desc { "default";
            rel.to: "base";
            color: 0 0 0 0; // no cc
         }
      }
   }

   programs {
      program { signal: "efl,content,set"; source: "efl";
         action: STATE_SET "content_visible" 0.0;
         target: "base";
         target: "efl.content";
      }
      program { signal: "efl,content,unset"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "efl.content";
      }
      program { signal: "mouse,clicked,1"; source: "block";
         action: SIGNAL_EMIT "efl,action,click" "efl";
      }
   }
}

group { "efl/alert_popup/button_layout1";
   data.item: "version" "123";
   parts {
      swallow { "efl.button1"; required;
      }
   }
}

group { "efl/alert_popup/button_layout2";
   data.item: "version" "123";
   parts {
      spacer { "div1";
         desc { "default";
            rel1.relative: 0.5 0.5;
            rel2.relative: 0.5 0.5;
            min: 5 5;
         }
      }
      swallow { "efl.button1"; required;
         desc { "default";
            rel2.to_x: "div1";
            rel2.relative: 0.0 1.0;
         }
      }
      swallow { "efl.button2"; required;
         desc { "default";
            rel1.to_x: "div1";
            rel1.relative: 1.0 0.0;
         }
      }
   }
}

group { "efl/alert_popup/button_layout3";
   data.item: "version" "123";
   parts {
      spacer { "div1";
         scale;
         desc { "default";
            rel1.relative: 0.333 0.5;
            rel2.relative: 0.333 0.5;
            min: 4 4;
         }
      }
      spacer { "div2";
         scale;
         desc { "default";
            rel1.relative: 0.666 0.5;
            rel2.relative: 0.666 0.5;
            min: 4 4;
         }
      }
      swallow { "efl.button1"; required;
         desc { "default";
            rel2.to_x: "div1";
            rel2.relative: 0.0 1.0;
         }
      }
      swallow { "efl.button2"; required;
         desc { "default";
            rel1.to_x: "div1";
            rel2.to_x: "div2";
            rel1.relative: 1.0 0.0;
            rel2.relative: 0.0 1.0;
         }
      }
      swallow { "efl.button3"; required;
         desc { "default";
            rel1.to_x: "div2";
            rel1.relative: 1.0 0.0;
         }
      }
   }
}

group { "efl/alert_popup/left_button";
   inherit: "efl/button";
   data.item: "version" "123";
}

group { "efl/alert_popup/right_button";
   inherit: "efl/button";
   data.item: "version" "123";
}

group { "efl/alert_popup/button";
   inherit: "efl/button";
   data.item: "version" "123";
}
