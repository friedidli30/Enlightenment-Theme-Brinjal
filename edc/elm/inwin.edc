group { name: "elm/win/inwin/default";
   images.image: "win_shad_flat.png" COMP;
   parts {
      part { name: "bg"; type: RECT; mouse_events: 1;
         description { state: "default" 0.0;
            color_class: "/dim/normal/inwin";
            color: 255 255 255 0; // no cc
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255; // no cc
         }
      }
      part { name: "shadow"; type: RECT;
         description { state: "default" 0.0;
            rel.to: "_sh1";
            color_class: "/shadow/normal/inwin";
         }
      }
      WIN_SHAD("base", "shadow", "win_shad_flat.png", 10, 10, 7, 14, 0.25);
      part { name: "base"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color_class: "/bg/normal/inwin";
            offscale;
            rel.to: "elm.swallow.content";
            rel1.offset: -8 -8;
            rel2.offset: 7 7;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            rel1.offset: 40 40;
            rel2.offset: -41 -41;
            offscale;
         }
      }
   }
   programs {
      program { name: "show";
         signal: "elm,action,show";
         source: "elm";
         action: STATE_SET "visible" 0.0;
         transition: DECELERATE 0.5;
         target: "bg";
      }
      program { name: "hide";
         signal: "elm,action,hide";
         source: "elm";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.5;
         target: "bg";
      }
   }
}

group { name: "elm/win/inwin/minimal";
   inherit: "elm/win/inwin/default";
   parts {
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 0.5 0.5;
            rel2.relative: 0.5 0.5;
         }
      }
   }
}

group { name: "elm/win/inwin/minimal_vertical";
   inherit: "elm/win/inwin/default";
   parts {
      part { name: "elm.swallow.content";
         type: SWALLOW;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 0.0 0.5;
            rel2.relative: 1.0 0.5;
         }
      }
   }
}
