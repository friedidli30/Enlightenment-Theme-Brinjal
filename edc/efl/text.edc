group { "efl/text/scroller";
   inherit: "efl/scroller";
   data.item: "version" "123";
   parts {
      part { name: "bg";
         description { state: "default" 0.0;
            color_class: "/bg/normal/entry";
         }
      }
      part { name: "validation_glow"; type: RECT; mouse_events: 0;
         insert_after: "efl.background";
         description { state: "default" 0.0;
            color: 0 0 0 0; // no cc
         }
         description { state: "pass" 0.0;
            color_class: "/bg/selected/entry/validate-pass";
         }
         description { state: "fail" 0.0;
            color_class: "/bg/selected/entry/validate-fail";
         }
      }
      program { name: "validation_fail";
         signal: "validation,default,fail";
         source: "efl";
         action: STATE_SET "fail" 0.0;
         target: "validation_glow";
      }
      program { name: "validation_pass";
         signal: "validation,default,pass";
         source: "efl";
         action: STATE_SET "pass" 0.0;
         target: "validation_glow";
      }
      program { name: "validation_off";
         signal: "validation,default";
         source: "efl";
         action: STATE_SET "default" 0.0;
         target: "validation_glow";
      }
      part { name: "glow"; type: RECT; mouse_events: 0;
         insert_before: "efl.content";
         scale: 1;
         description { state: "default" 0.0;
            rel.to: "bg";
            rel1.relative: 0.0 1.0;
            color_class: "/bg/selected/entry/focus";
            color: 255 255 255 0; // no cc
            visible: 0;
            offscale;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            rel1.offset: 0 -3;
            color: 255 255 255 255; // no cc
            visible: 1;
         }
      }
      program { signal: "efl,action,focus_highlight,show"; source: "efl";
         action: STATE_SET "focused" 0.0;
         transition: DECELERATE 0.3;
         target: "glow";
      }
      program { signal: "efl,action,focus_highlight,hide"; source: "efl";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.3;
         target: "glow";
      }
      part { name: "efl.content"; type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "efl.icon";
            rel1.relative: 1.0 0.0;
            rel1.offset: 2 2;
            rel2.to: "efl.extra";
            rel2.relative: 0.0 1.0;
            rel2.offset: -3 -3;
            offscale;
         }
      }
      part { name: "efl.icon"; type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.offset: -1 2;
            rel2.offset: -1 -3;
            rel2.relative: 0.0 1.0;
            visible: 0;
            align: 1.0 0.5;
            offscale;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.offset: 2 2;
            rel2.offset: 2 -3;
            visible: 1;
            align: 0.0 0.5;
         }
      }
      program { signal: "efl,action,show,icon"; source: "efl";
         action: STATE_SET "visible" 0.0;
         target: "efl.icon";
      }
      program { signal: "efl,action,hide,icon"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "efl.icon";
      }
      part { name: "efl.extra"; type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 1.0 0.0;
            rel1.offset: 0 2;
            rel2.offset: 0 -3;
            visible: 0;
            align: 0.0 0.5;
            offscale;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.offset: -3 2;
            rel2.offset: -3 -3;
            visible: 1;
            align: 1.0 0.5;
         }
      }
      program { signal: "efl,action,show,end"; source: "efl";
         action: STATE_SET "visible" 0.0;
         target: "efl.extra";
      }
      program { signal: "efl,action,hide,end"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "efl.extra";
      }
      part { name: "efl.overlay"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel.to: "clipper";
         }
      }
   }
}

group { "efl/text/single/scroller";
   data.item: "version" "123";
   data.item: "focus_highlight" "on";
   parts {
      part { name: "sb_vbar_base"; type: RECT;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel2.relative: 1.0 0.0;
            visible: 0;
         }
      }
      part { name: "efl.draggable.vertical_bar"; type: RECT;
         dragable.x: 0 0 0;
         dragable.y: 1 1 0;
         dragable.confine: "sb_vbar_base";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_vbar_base";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_vbar_base";
            visible: 0;
         }
      }
      part { name: "sb_hbar_base"; type: RECT;
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 1.0 0.0;
            visible: 0;
         }
      }
      part { name: "efl.draggable.horizontal_bar"; type: RECT;
         dragable.x: 1 1 0;
         dragable.y: 0 0 0;
         dragable.confine: "sb_hbar_base";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 0.5  0.5;
            rel1.to: "sb_hbar_base";
            rel2.relative: 0.5  0.5;
            rel2.to: "sb_hbar_base";
            visible: 0;
         }
      }
      part { name: "bg"; type: RECT;
         description { state: "default" 0.0;
            rel.to: "efl.background";
            color_class: "/bg/normal/entry";
         }
      }
      part { name: "clipper"; type: RECT;
         description { state: "default" 0.0;
            rel.to: "efl.background";
         }
      }
      part { name: "efl.background"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
         }
      }
      part { name: "validation_glow"; type: RECT;
         mouse_events: 0;
         description { state: "default" 0.0;
            color: 0 0 0 0; // no cc
         }
         description { state: "pass" 0.0;
            color_class: "/bg/selected/entry/validate-pass";
         }
         description { state: "fail" 0.0;
            color_class: "/bg/selected/entry/validate-fail";
         }
      }
      part { name: "glow"; type: RECT; mouse_events: 0;
         insert_before: "efl.content";
         scale: 1;
         description { state: "default" 0.0;
            rel.to: "bg";
            rel1.relative: 0.0 1.0;
            color_class: "/bg/selected/entry/focus";
            color: 255 255 255 0; // no cc
            visible: 0;
            offscale;
         }
         description { state: "focused" 0.0;
            inherit: "default" 0.0;
            color: 255 255 255 255; // no cc
            rel1.offset: 0 -3;
            visible: 1;
         }
      }
      part { name: "efl.content"; type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel1.to: "efl.icon";
            rel1.relative: 1.0 0.0;
            rel1.offset: 2 2;
            rel2.to: "efl.extra";
            rel2.relative: 0.0 1.0;
            rel2.offset: -3 -3;
            offscale;
         }
      }
      part { name: "efl.icon"; type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.offset: -1 2;
            rel2.offset: -1 -3;
            rel2.relative: 0.0 1.0;
            visible: 0;
            align: 1.0 0.5;
            offscale;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            rel1.offset: 2 2;
            rel2.offset: 2 -3;
            visible: 1;
            align: 0.0 0.5;
         }
      }
      program { signal: "efl,action,show,icon"; source: "efl";
         action: STATE_SET "visible" 0.0;
         target: "efl.icon";
      }
      program { signal: "efl,action,hide,icon"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "efl.icon";
      }
      part { name: "efl.extra"; type: SWALLOW;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            fixed: 1 1;
            rel1.relative: 1.0 0.0;
            rel1.offset: 0 2;
            rel2.offset: 0 -3;
            visible: 0;
            align: 0.0 0.5;
            offscale;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
            rel1.offset: -3 2;
            rel2.offset: -3 -3;
            align: 1.0 0.5;
         }
      }
      program { signal: "efl,action,show,end"; source: "efl";
         action: STATE_SET "visible" 0.0;
         target: "efl.extra";
      }
      program { signal: "efl,action,hide,end"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "efl.extra";
      }
      part { name: "efl.overlay"; type: SWALLOW;
         clip_to: "clipper";
         description { state: "default" 0.0;
            rel.to: "clipper";
         }
      }
   }
   programs {
      program { signal: "efl,action,focus_highlight,show"; source: "efl";
         action: STATE_SET "focused" 0.0;
         transition: DECELERATE 0.2;
         target: "glow";
      }
      program { signal: "efl,action,focus_highlight,hide"; source: "efl";
         action: STATE_SET "default" 0.0;
         transition: DECELERATE 0.3;
         target: "glow";
      }
      program { name: "validation_fail";
         signal: "validation,default,fail";
         source: "efl";
         action: STATE_SET "fail" 0.0;
         target: "validation_glow";
      }
      program { name: "validation_pass";
         signal: "validation,default,pass";
         source: "efl";
         action: STATE_SET "pass" 0.0;
         target: "validation_glow";
      }
      program { name: "validation_off";
         signal: "validation,default";
         source: "efl";
         action: STATE_SET "default" 0.0;
         target: "validation_glow";
      }
   }
}

group { "efl/text/cursor";
   data.item: "version" "123";
   min: 1 0;
   parts {
      part { name: "cursor"; type: RECT;
         mouse_events: 0;
         scale: 1;
         clip_to: "clipper";
         description { state: "default" 0.0;
            min: 1 10;
            color_class: "/fg/normal/entry/cursor";
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "clipper"; type: RECT;
         description { state: "default" 0.0;
            rel.to: "cursor";
            fixed: 1 1;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { signal: "selection,changed"; source: "efl.text";
         action: STATE_SET "hidden" 0.0;
         target: "clipper";
      }
      program { signal: "selection,cleared"; source: "efl.text";
         action: STATE_SET "default" 0.0;
         target: "clipper";
      }
      program { signal: "selection,reset"; source: "efl.text";
         action: STATE_SET "default" 0.0;
         target: "clipper";
      }
      program { signal: "efl,action,focus"; source: "efl";
         action: ACTION_STOP;
         target: "cursor_show";
         target: "cursor_hide";
         target: "cursor_show_timer";
         target: "cursor_hide_timer";
         after: "cursor_show";
      }
      program { signal: "efl,action,unfocus"; source: "efl";
         action: ACTION_STOP;
         target: "cursor_show";
         target: "cursor_hide";
         target: "cursor_show_timer";
         target: "cursor_hide_timer";
         after: "cursor_hide_stop";
      }
      program { signal: "efl,action,show,cursor"; source: "efl";
         action: ACTION_STOP;
         target: "cursor_show";
         target: "cursor_hide";
         target: "cursor_show_timer";
         target: "cursor_hide_timer";
         after: "cursor_show";
      }
      program { name: "cursor_hide_stop";
         action: STATE_SET "default" 0.0;
         target: "cursor";
      }
      program { name: "cursor_show";
         action: STATE_SET "visible" 0.0;
         target: "cursor";
         after: "cursor_show_timer";
      }
      program { name: "cursor_hide";
         action: STATE_SET "default" 0.0;
         target: "cursor";
         transition: SINUSOIDAL 0.2;
         after: "cursor_hide_timer";
      }
      program { name: "cursor_show_timer";
         in: 0.5 0.0;
         after: "cursor_hide";
      }
      program { name: "cursor_hide_timer";
         in: 0.2 0.0;
         after: "cursor_show";
      }
   }
}

group { "efl/text/selection";
   data.item: "version" "123";
   parts {
      part { name: "base"; type: RECT;
         description { state: "default" 0.0;
            color_class: "/bg/normal/entry/selection";
         }
      }
   }
}

group { "efl/text/anchor";
   data.item: "version" "123";
   parts {
      part { name: "bar"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            color_class: "/fg/normal/entry/anchor";
            fixed: 0 1;
            rel1.relative: 0.0 1.0;
            rel1.offset: -1 -1;
            rel2.offset: 0 -1;
            offscale;
         }
      }
   }
}

group { "efl/text";
   data.item: "version" "123";
   data {
      item: "font.name" "Sans";
      item: "font.size" "10";
      item: "style.color" "cc:/fg/normal/entry/text";
      item: "style.color_disabled" "cc:/fg/disabled/entry/text";

      item: "guide.font.name" "Sans";
      item: "guide.font.size" "10";
      item: "guide.style.color" "cc:/fg/normal/entry/text/guide";
   }
   parts {
      part { name: "efl.background"; type: SWALLOW;
         description { state: "default" 0.0;
         }
      }
      part { name: "efl.text"; type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            /* we gotta use 0 0 here, because of scrolled entries */
            fixed: 0 0;
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
            offscale;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
      part { name: "efl.text_guide"; type: SWALLOW;
         scale: 1;
         description { state: "default" 0.0;
            fixed: 0 0;
            rel1.offset: 2 2;
            rel2.offset: -3 -3;
            offscale;
         }
         description { state: "disabled" 0.0;
            inherit: "default" 0.0;
         }
      }
   }
   programs {
      program { signal: "load"; source: "";
         action: FOCUS_SET;
         target: "efl.text";
      }
      program { signal: "efl,state,disabled"; source: "efl";
         action: STATE_SET "disabled" 0.0;
         target: "efl.text";
      }
      program { signal: "efl,state,enabled"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "efl.text";
      }
      #if 0
      program { signal: "efl,guide,disabled"; source: "efl";
         action: STATE_SET "hidden" 0.0;
         target: "efl.guide";
      }
      program { signal: "efl,guide,enabled"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "efl.guide";
      }
      #endif
      program { signal: "entry,keydown"; source: "efl.text";
         script {
            new buf[32];
            snprintf(buf, 31, "key-down%i", (rand() % 5) + 1);
            run_program(get_program_id(buf));
         }
      }
      program { name: "key-down1";
         action: PLAY_SAMPLE "key-tap1" 1.0 INPUT;
      }
      program { name: "key-down2";
         action: PLAY_SAMPLE "key-tap2" 1.0 INPUT;
      }
      program { name: "key-down3";
         action: PLAY_SAMPLE "key-tap3" 1.0 INPUT;
      }
      program { name: "key-down4";
         action: PLAY_SAMPLE "key-tap4" 1.0 INPUT;
      }
      program { name: "key-down5";
         action: PLAY_SAMPLE "key-tap5" 1.0 INPUT;
      }
   }
}

group { "efl/text/magnifier";
   data.item: "version" "123";
   parts {
      part { name: "shadow"; mouse_events: 0;
         description { state: "default" 0.0;
            rel.to: "bg";
            WIN_SHADOW;
            color_class: "/shadow/normal/entry/magnifier";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "bg"; type: RECT; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            min: 80 40;
            rel1.offset: 4 4;
            rel2.offset: -5 -5;
            color_class: "/bg/normal/entry";
            offscale;
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
      part { name: "efl.content"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            rel.to: "bg";
         }
         description { state: "hidden" 0.0;
            inherit: "default" 0.0;
            visible: 0;
         }
      }
   }
   programs {
      program { signal: "efl,action,show,magnifier"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "efl.content";
         target: "bg";
         target: "shadow";
      }
      program { signal: "efl,action,hide,magnifier"; source: "efl";
         action: STATE_SET "hidden" 0.0;
         target: "efl.content";
         target: "bg";
         target: "shadow";
      }
   }
}

group { "efl/text/handler/start";
   data.item: "version" "123";
   images.image: "handle_pick_up_left.png" COMP;
   parts {
      part { name: "base"; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "handle_pick_up_left.png";
            min: 21 27; // 42 54
            align: (29/42) (11/54);
            color_class: "/fg/normal/entry/handler/start";
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            rel.to: "base";
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "event"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel.to: "base";
            color: 0 0 0 0; // no cc
            min: 32 32;
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { signal: "efl,handler,show"; source: "efl";
         action: STATE_SET "visible" 0.0;
         target: "base";
         target: "event";
         target: "elm.swallow.content";
      }
      program { signal: "efl,handler,hide"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "event";
         target: "elm.swallow.content";
      }
   }
}

group { "efl/text/handler/end";
   data.item: "version" "123";
   images.image: "handle_pick_up_right.png" COMP;
   parts {
      part { name: "base"; mouse_events: 0;
         scale: 1;
         description { state: "default" 0.0;
            image.normal: "handle_pick_up_right.png";
            min: 21 27; // 42 54
            align: (29/42) (11/54);
            color_class: "/fg/normal/entry/handler/end";
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "elm.swallow.content"; type: SWALLOW; mouse_events: 0;
         description { state: "default" 0.0;
            rel.to: "base";
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
      part { name: "event"; type: RECT;
         scale: 1;
         description { state: "default" 0.0;
            rel.to: "base";
            color: 0 0 0 0; // no cc
            min: 32 32;
            visible: 0;
         }
         description { state: "visible" 0.0;
            inherit: "default" 0.0;
            visible: 1;
         }
      }
   }
   programs {
      program { signal: "efl,handler,show"; source: "efl";
         action: STATE_SET "visible" 0.0;
         target: "base";
         target: "event";
         target: "elm.swallow.content";
      }
      program { signal: "efl,handler,hide"; source: "efl";
         action: STATE_SET "default" 0.0;
         target: "base";
         target: "event";
         target: "elm.swallow.content";
      }
   }
}


///////////////////////////////////////////////////////////////////////////////
// emoticon images from:
// Tanya - Latvia
// http://lazycrazy.deviantart.com/
// http://lazycrazy.deviantart.com/art/Very-Emotional-Emoticons-144461621
group { "efl/text/emoticon/angry"; data.item: "version" "123"; images.image:
   "emo-angry.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-angry.png"; } } } }
group { "efl/text/emoticon/angry-shout"; data.item: "version" "123"; images.image:
   "emo-angry-shout.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-angry-shout.png"; } } } }
group { "efl/text/emoticon/crazy-laugh"; data.item: "version" "123"; images.image:
   "emo-crazy-laugh.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-crazy-laugh.png"; } } } }
group { "efl/text/emoticon/evil-laugh"; data.item: "version" "123"; images.image:
   "emo-evil-laugh.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-evil-laugh.png"; } } } }
group { "efl/text/emoticon/evil"; data.item: "version" "123"; images.image:
   "emo-evil.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-evil.png"; } } } }
group { "efl/text/emoticon/goggle-smile"; data.item: "version" "123"; images.image:
   "emo-goggle-smile.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-goggle-smile.png"; } } } }
group { "efl/text/emoticon/grumpy"; data.item: "version" "123"; images.image:
   "emo-grumpy.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-grumpy.png"; } } } }
group { "efl/text/emoticon/grumpy-smile"; data.item: "version" "123"; images.image:
   "emo-grumpy-smile.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-grumpy-smile.png"; } } } }
group { "efl/text/emoticon/guilty"; data.item: "version" "123"; images.image:
   "emo-guilty.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-guilty.png"; } } } }
group { "efl/text/emoticon/guilty-smile"; data.item: "version" "123"; images.image:
   "emo-guilty-smile.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-guilty-smile.png"; } } } }
group { "efl/text/emoticon/haha"; data.item: "version" "123"; images.image:
   "emo-haha.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-haha.png"; } } } }
group { "efl/text/emoticon/half-smile"; data.item: "version" "123"; images.image:
   "emo-half-smile.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-half-smile.png"; } } } }
group { "efl/text/emoticon/happy-panting"; data.item: "version" "123"; images.image:
   "emo-happy-panting.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-happy-panting.png"; } } } }
group { "efl/text/emoticon/happy"; data.item: "version" "123"; images.image:
   "emo-happy.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-happy.png"; } } } }
group { "efl/text/emoticon/indifferent"; data.item: "version" "123"; images.image:
   "emo-indifferent.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-indifferent.png"; } } } }
group { "efl/text/emoticon/kiss"; data.item: "version" "123"; images.image:
   "emo-kiss.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-kiss.png"; } } } }
group { "efl/text/emoticon/knowing-grin"; data.item: "version" "123"; images.image:
   "emo-knowing-grin.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-knowing-grin.png"; } } } }
group { "efl/text/emoticon/laugh"; data.item: "version" "123"; images.image:
   "emo-laugh.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-laugh.png"; } } } }
group { "efl/text/emoticon/little-bit-sorry"; data.item: "version" "123"; images.image:
   "emo-little-bit-sorry.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-little-bit-sorry.png"; } } } }
group { "efl/text/emoticon/love-lots"; data.item: "version" "123"; images.image:
   "emo-love-lots.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-love-lots.png"; } } } }
group { "efl/text/emoticon/love"; data.item: "version" "123"; images.image:
   "emo-love.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-love.png"; } } } }
group { "efl/text/emoticon/minimal-smile"; data.item: "version" "123"; images.image:
   "emo-minimal-smile.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-minimal-smile.png"; } } } }
group { "efl/text/emoticon/not-happy"; data.item: "version" "123"; images.image:
   "emo-not-happy.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-not-happy.png"; } } } }
group { "efl/text/emoticon/not-impressed"; data.item: "version" "123"; images.image:
   "emo-not-impressed.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-not-impressed.png"; } } } }
group { "efl/text/emoticon/omg"; data.item: "version" "123"; images.image:
   "emo-omg.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-omg.png"; } } } }
group { "efl/text/emoticon/opensmile"; data.item: "version" "123"; images.image:
   "emo-opensmile.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-opensmile.png"; } } } }
group { "efl/text/emoticon/smile"; data.item: "version" "123"; images.image:
   "emo-smile.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-smile.png"; } } } }
group { "efl/text/emoticon/sorry"; data.item: "version" "123"; images.image:
   "emo-sorry.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-sorry.png"; } } } }
group { "efl/text/emoticon/squint-laugh"; data.item: "version" "123"; images.image:
   "emo-squint-laugh.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-squint-laugh.png"; } } } }
group { "efl/text/emoticon/surprised"; data.item: "version" "123"; images.image:
   "emo-surprised.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-surprised.png"; } } } }
group { "efl/text/emoticon/suspicious"; data.item: "version" "123"; images.image:
   "emo-suspicious.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-suspicious.png"; } } } }
group { "efl/text/emoticon/tongue-dangling"; data.item: "version" "123"; images.image:
   "emo-tongue-dangling.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-tongue-dangling.png"; } } } }
group { "efl/text/emoticon/tongue-poke"; data.item: "version" "123"; images.image:
   "emo-tongue-poke.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-tongue-poke.png"; } } } }
group { "efl/text/emoticon/uh"; data.item: "version" "123"; images.image:
   "emo-uh.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-uh.png"; } } } }
group { "efl/text/emoticon/unhappy"; data.item: "version" "123"; images.image:
   "emo-unhappy.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-unhappy.png"; } } } }
group { "efl/text/emoticon/very-sorry"; data.item: "version" "123"; images.image:
   "emo-very-sorry.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-very-sorry.png"; } } } }
group { "efl/text/emoticon/what"; data.item: "version" "123"; images.image:
   "emo-what.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-what.png"; } } } }
group { "efl/text/emoticon/wink"; data.item: "version" "123"; images.image:
   "emo-wink.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-wink.png"; } } } }
group { "efl/text/emoticon/worried"; data.item: "version" "123"; images.image:
   "emo-worried.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-worried.png"; } } } }
group { "efl/text/emoticon/wtf"; data.item: "version" "123"; images.image:
   "emo-wtf.png" COMP; parts { part { "icon"; nomouse; desc { "default"; max: 64 64; image.normal:
            "emo-wtf.png"; } } } }
//------------------------------------------------------------
